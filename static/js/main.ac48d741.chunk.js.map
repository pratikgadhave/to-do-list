{"version":3,"sources":["logo.svg","firebase_config.js","components/todos.js","components/Checklist.jpg","components/signin.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","signOut","Todos","useState","todos","setTodos","toDoInput","settoDoInput","useEffect","collection","currentUser","uid","onSnapshot","querySnapshop","docs","map","doc","timeStamp","data","id","todo","isComplete","className","onClick","value","onChange","e","target","type","classNameName","preventDefault","console","log","add","FieldValue","serverTimestamp","update","delete","class","signInWithGoogle","signInWithPopup","GoogleAuthProvider","SignIn","src","image1","alt","width","App","useAuthState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac48d741.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import firebase from \"firebase/app\";\r\n\r\nimport \"firebase/analytics\";\r\n\r\n\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyA-l4hwClwXiymHFlOAEdG22Hjzsq3EmH4\",\r\n    authDomain: \"to-do-list-642dc.firebaseapp.com\",\r\n    projectId: \"to-do-list-642dc\",\r\n    storageBucket: \"to-do-list-642dc.appspot.com\",\r\n    messagingSenderId: \"1079564562663\",\r\n    appId: \"1:1079564562663:web:54bdba52e9abe17e7c7242\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  const db=firebase.firestore();\r\n  export const auth=firebase.auth()\r\n  export {db};","import React from 'react'\r\nimport './todos.css'\r\n\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { useState,useEffect } from 'react';\r\nimport { auth, db } from '../firebase_config';\r\nimport firebase from 'firebase';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst signOut=()=>auth.signOut();\r\nexport default function Todos() {\r\n    const [todos,setTodos]=useState([])\r\n    const [toDoInput, settoDoInput] = useState('')\r\n    \r\n    useEffect(() => {\r\n        \r\n        getTodo()\r\n    }, [])\r\n\r\n    \r\n\r\n    function getTodo(){\r\n        db.collection(`users/${auth.currentUser.uid}/mytodo`).onSnapshot(function (querySnapshop){\r\n            setTodos(querySnapshop.docs.map((doc)=>({\r\n                timeStamp:doc.data().timeStamp,\r\n                id:doc.id,\r\n                todo: doc.data().todo,\r\n                isComplete:doc.data().isComplete\r\n                \r\n            })))\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    const onSubmitTodo=(e)=>{\r\n        e.preventDefault()\r\n        console.log(auth.currentUser.uid);\r\n        db.collection(`users/${auth.currentUser.uid}/mytodo`).add({\r\n            isComplete:false,\r\n            timeStamp:firebase.firestore.FieldValue.serverTimestamp(),\r\n            todo:toDoInput\r\n        });\r\n        \r\n        settoDoInput(\"\")\r\n    }\r\n    \r\n\r\n    return (\r\n        \r\n        <div className=\"main-container\">\r\n            \r\n            <div className=\"header\">\r\n                <div className=\"app-name\">\r\n                    <h1>TO-DO-LIST</h1>\r\n                </div>\r\n                <div className=\"btn-container\">\r\n                    <button onClick={signOut} className=\"sign-out-btn\">Sign Out</button>\r\n                </div>\r\n            \r\n            \r\n            </div>\r\n            \r\n            <div className=\"input-bar\">\r\n            <form >\r\n                <input value={toDoInput} onChange={(e)=>{settoDoInput(e.target.value)}} type=\"text\" classNameName=\"todo-input\"/>\r\n                <button type=\"submit\" className=\"todo-button\" onClick={onSubmitTodo}>\r\n                    <i className=\"fa fa-plus-square\"></i>\r\n                </button>\r\n                \r\n                    \r\n            </form>\r\n            </div>\r\n            \r\n            <div className=\"todo-container\">\r\n                <ul className=\"todo-list\">\r\n                    {todos.map((todo)=>(\r\n                        \r\n                        <div className=\"todo \">\r\n                            <li className={todo.isComplete?\"todo-list completed\":\"todo-list\"}>\r\n                                {todo.todo}\r\n                                \r\n                            </li>\r\n                            <button onClick={()=>{\r\n                                    \r\n                                    db.collection(`users/${auth.currentUser.uid}/mytodo`).doc(todo.id).update({\r\n                                        isComplete:!todo.isComplete\r\n                                    })\r\n                                    \r\n                                    \r\n\r\n                                }} className=\"completed-btn\"><i className=\"fa fa-check-square\"></i></button>\r\n                            <button onClick={()=>{\r\n                                \r\n                                db.collection(`users/${auth.currentUser.uid}/mytodo`).doc(todo.id).delete()\r\n                                    \r\n                                }} className=\"trash-btn\"><i class=\"fa fa-trash\" ></i></button>\r\n                            \r\n                            \r\n                            \r\n                        </div>\r\n                        \r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Checklist.6badb99b.jpg\";","import React from 'react'\r\nimport { auth } from '../firebase_config'\r\nimport firebase from 'firebase';\r\nimport image1 from './Checklist.jpg'\r\nimport './signin.css'\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nconst signInWithGoogle=()=>auth.signInWithPopup(new firebase.auth.GoogleAuthProvider());\r\n\r\nexport default function SignIn() {\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"sign-in-container\">\r\n                <div className=\"bucket-one\">\r\n                <div className=\"sign-in-btn\">\r\n                    <button onClick={signInWithGoogle}>Sign in with Google <i class=\"fa fa-google\"></i></button>\r\n                    \r\n                </div>\r\n                </div>\r\n                <div className=\"bucket-two\">\r\n                    <div className=\"info\">\r\n                        <h1>WORK EFFICIENTLY, WORK CLEAN</h1>\r\n                        <img src={image1} alt=\"\" width=\"50%\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Todos from './components/todos';\nimport SignIn from './components/signin';\nimport {useAuthState} from 'react-firebase-hooks/auth'\nimport { auth } from './firebase_config';\n\nfunction App() {\n  const [user]=useAuthState(auth)\n\n  return user?<Todos/>:<SignIn/>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}